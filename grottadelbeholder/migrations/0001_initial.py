# Generated by Django 4.0.4 on 2022-06-22 18:42

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('CL', 'Classes'), ('RA', 'Races'), ('MO', 'Monsters'), ('SP', 'Spells')], default=None, max_length=2)),
                ('pub_date', models.DateTimeField(verbose_name='date published')),
                ('rev', models.IntegerField(default=1)),
                ('name', models.CharField(max_length=30)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mail', models.EmailField(max_length=254, unique=True)),
                ('username', models.CharField(max_length=25, unique=True)),
                ('password', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='ClassContent',
            fields=[
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='grottadelbeholder.content')),
                ('hitPointsLevel1', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(20)])),
                ('hitPointsAboveLv1', models.CharField(max_length=25)),
                ('hitDiceType', models.CharField(choices=[('4', '1d4'), ('6', '1d6'), ('8', '1d8'), ('10', '1d10'), ('12', '1d12'), ('20', '1d20')], max_length=5)),
                ('armorProficiency', models.CharField(choices=[('N', 'None'), ('L', 'Light armor'), ('M', 'Medium armor'), ('A', 'All armor')], max_length=1)),
                ('shieldProficiency', models.BooleanField()),
                ('weaponProficiency', models.CharField(max_length=100)),
                ('toolProficiency', models.CharField(max_length=100)),
                ('savingThrows', models.CharField(max_length=100)),
                ('Skills', models.CharField(max_length=200)),
                ('abilities', models.TextField()),
                ('archetypes', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MonsterContent',
            fields=[
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='grottadelbeholder.content')),
                ('armorClass', models.PositiveSmallIntegerField(default=15, validators=[django.core.validators.MaxValueValidator(25), django.core.validators.MinValueValidator(1)])),
                ('hitPoints', models.PositiveSmallIntegerField()),
                ('speed', models.PositiveSmallIntegerField()),
                ('strScore', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('dexScore', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('conScore', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('intScore', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('wisScore', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('chaScore', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('skills', models.TextField()),
                ('passivePerception', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('challengeRate', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(30)])),
                ('xp', models.PositiveIntegerField()),
                ('alignment', models.CharField(max_length=200)),
                ('abilities', models.TextField()),
                ('actions', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='RaceContent',
            fields=[
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='grottadelbeholder.content')),
                ('strScoreInc', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-4), django.core.validators.MaxValueValidator(4)])),
                ('dexScoreInc', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-4), django.core.validators.MaxValueValidator(4)])),
                ('conScoreInc', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-4), django.core.validators.MaxValueValidator(4)])),
                ('intScoreInc', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-4), django.core.validators.MaxValueValidator(4)])),
                ('wisScoreInc', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-4), django.core.validators.MaxValueValidator(4)])),
                ('chaScoreInc', models.SmallIntegerField(validators=[django.core.validators.MinValueValidator(-4), django.core.validators.MaxValueValidator(4)])),
                ('age', models.CharField(max_length=200)),
                ('alignment', models.CharField(max_length=200)),
                ('size', models.CharField(max_length=200)),
                ('speed', models.CharField(max_length=200)),
                ('languages', models.CharField(max_length=200)),
                ('abilities', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='SpellContent',
            fields=[
                ('content', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='grottadelbeholder.content')),
                ('level', models.PositiveSmallIntegerField(validators=[django.core.validators.MaxValueValidator(12)])),
                ('castingTime', models.CharField(max_length=25)),
                ('range', models.CharField(max_length=25)),
                ('vComponent', models.BooleanField()),
                ('sComponent', models.BooleanField()),
                ('mComponent', models.BooleanField()),
                ('duration', models.CharField(max_length=25)),
                ('school', models.CharField(choices=[('V', 'Evocation'), ('I', 'Illusion'), ('C', 'Conjuration'), ('A', 'Abjuration'), ('N', 'Necromancy'), ('T', 'Transmutation'), ('E', 'Enchantment'), ('D', 'Divination')], default='V', max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField()),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grottadelbeholder.content')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grottadelbeholder.user')),
            ],
        ),
        migrations.AddField(
            model_name='content',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='grottadelbeholder.user'),
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('KO', 'Kobold'), ('DB', 'Dragonborn'), ('BH', 'Beholder'), ('DM', 'Dungeon Master')], default='KO', max_length=2)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='grottadelbeholder.user')),
            ],
        ),
    ]
